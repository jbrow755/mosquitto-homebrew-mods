'\" -*- coding: us-ascii -*-
.if \n(.g .ds T< \\FC
.if \n(.g .ds T> \\F[\n[.fam]]
.de URL
\\$2 \(la\\$1\(ra\\$3
..
.if \n(.g .mso www.tmac
.TH mosquitto.conf 5 "3 December 2010" "" ""
.SH NAME
mosquitto.conf \- the configuration file for mosquitto
.SH SYNOPSIS
'nh
.fi
.ad l
\fBmosquitto.conf\fR \kx
.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
'in \n(.iu+\nxu
'in \n(.iu-\nxu
.ad b
'hy
.SH DESCRIPTION
\fBmosquitto.conf\fR is the configuration file for
mosquitto. This file can reside anywhere as long as mosquitto can read
it. By default, mosquitto does not need a configuration file and will
use the default values listed below. See
\fBmosquitto\fR(8)
for information on how to load a configuration file.
.SH "FILE FORMAT"
All lines with a # as the very first character are treated as a
comment.
.PP
Configuration lines start with a variable name. The variable
value is separated from the name by a single space.
.SH VARIABLES
.TP 
\*(T<\fBautosave_interval\fR\*(T>
The number of seconds that mosquitto will wait 
between each time it saves the in-memory database to 
disk. If set to 0, the in-memory database will only
be saved when mosquitto exits or when receiving the 
SIGUSR1 signal. Note that this setting only has an 
effect if persistence is enabled. Defaults to 1800 
seconds (30 minutes).
.TP 
\*(T<\fBbind_address\fR\*(T>
Listen for incoming network connections on the
specified IP address/hostname only. This is useful to
restrict access to certain network interfaces. To restrict
access to mosquitto to the local host only, use "bind_address
localhost". This only applies to the default listener. Use
the listener variable to control other listeners.
.TP 
\*(T<\fBlistener\fR\*(T>
Listen for incoming network connection on the
specified port. A second optional argument allows the
listener to be bound to a specific ip address/hostname. If
this variable is used and neither bind_address nor port are
used then the default listener will not be started. This
option may be specified multiple times.
.TP 
\*(T<\fBlog_dest\fR\*(T>
Send log messages to a particular destination.
Possible destinations are: stdout stderr syslog topic.
stdout and stderr log to the console on the named output.
syslog uses the userspace syslog facility which usually
ends up in /var/log/messages or similar and topic logs to the
broker topic '$SYS/broker/log/<severity>', where severity
is one of D, E, W, N, I which are debug, error, warning,
notice and information. Use "log_dest none" if you wish to
disable logging. Defaults to stderr. This option
may be specified multiple times.
.TP 
\*(T<\fBlog_type\fR\*(T>
Choose types of messages to log. Possible types are:
debug, error, warning, notice, information, none. Defaults
to error, warning, notice and information. This option may
be specified multiple times. Note that the debug type (used
for decoding incoming network packets) is never logged in
syslog or topics.
.TP 
\*(T<\fBmax_connections\fR\*(T>
Limit the total number of clients connected. Set to
-1 to have "unlimited" connections. Note that other limits
may be imposed that are outside the control of mosquitto.
See e.g. \fBlimits.conf\fR(5).
.TP 
\*(T<\fBmax_inflight_messages\fR\*(T>
The maximum number of QoS 1 or 2 messages that can be
in the process of being transmitted simultaneously. This
includes messages currently going through handshakes and
messages that are being retried. Defaults to 20. Set to 0
for no maximum. If set to 1, this will guarantee in-order
delivery of messages.
.TP 
\*(T<\fBmax_queued_messages\fR\*(T>
The maximum number of QoS 1 or 2 messages to hold in
the queue above those messages that are currently in
flight. Defaults to 100. Set to 0 for no maximum (not
recommended).
.TP 
\*(T<\fBpersistence\fR\*(T>
Can be true or false. If true, connection,
subscription and message data will be written to the disk
in mosquitto.db at the location dictated by
persistence_location. When mosquitto is restarted, it will
reload the information stored in mosquitto.db. The data
will be written to disk when mosquitto closes and also at
periodic intervals as defined by autosave_interval. Writing
of the persistence database may also be forced by sending
mosquitto the SIGUSR1 signal. If false, the data will be
stored in memory only. Defaults to false.
.TP 
\*(T<\fBpersistence_file\fR\*(T>
The filename to use for the persistent database. Defaults to mosquitto.db.
.TP 
\*(T<\fBpersistence_location\fR\*(T>
The path where the persistence database should be
stored. Must end in a trailing slash. If not given, then
the current directory is used.
.TP 
\*(T<\fBpid_file\fR\*(T>
Write a pid file to the file specified. If not given
(the default), no pid file will be written. If the pid file
cannot be written, mosquitto will exit. This option only
has an effect is mosquitto is run in daemon mode.

If mosquitto is being automatically started by an
init script it will usually be required to write a pid
file. This should then be configured as
/var/run/mosquitto.pid
.TP 
\*(T<\fBport\fR\*(T>
Set the network port for the default listener to
listen on. Defaults to 1883.
.TP 
\*(T<\fBretry_interval\fR\*(T>
The integer number of seconds after a QoS=1 or QoS=2
message has been sent that mosquitto will wait before
retrying when no response is received. If unset, defaults
to 20 seconds.
.TP 
\*(T<\fBstore_clean_interval\fR\*(T>
The integer number of seconds between the internal
message store being cleaned of messages that are no longer
referenced. Lower values will result in lower memory usage
but more processor time, higher values will have the
opposite effect. Setting a value of 0 means the
unreferenced messages will be disposed of as quickly as
possible. Defaults to 10 seconds.
.TP 
\*(T<\fBsys_interval\fR\*(T>
The integer number of seconds between updates of the
$SYS subscription hierarchy, which provides status
information about the broker. If unset, defaults to 10
seconds.
.TP 
\*(T<\fBuser\fR\*(T>
When run as root, change to this user and its primary
group on startup. If mosquitto is unable to change to this
user and group, it will exit with an error. The user
specified must have read/write access to the persistence
database if it is to be written. If run as a non-root user,
this setting has no effect. Defaults to mosquitto.

This setting has no effect on Windows and so you
should run mosquitto as the user you wish it to run
as.
.SH "CONFIGURING BRIDGES"
Multiple bridges (connections to other brokers) can be configured
using the following variables.
.TP 
\*(T<\fBaddress\fR\*(T> \fIaddress[:port]\fR, \*(T<\fBaddresses\fR\*(T> \fIaddress[:port]\fR
Specify the address and optionally the port of the
bridge to connect to. This must be given for each bridge
connection. If the port is not specified, the default of
1883 is used.

Unlike rsmb, it is not currently possible to specify
multiple addresses for a single bridge connection
here. This is true even if the name "addresses" is used.
.TP 
\*(T<\fBcleansession\fR\*(T> [ true | false ]
Set the clean session option for this bridge. Setting
to false (the default), means that all subscriptions on the
remote broker are kept in case of the network connection
dropping. If set to true, all subscriptions and messages on
the remote broker will be cleaned up if the connection
drops. Note that setting to true may cause a large amount
of retained messages to be sent each time the bridge
reconnects.
.TP 
\*(T<\fBconnection\fR\*(T> \fIname\fR
This variable marks the start of a new bridge
connection. It is also used to give the bridge a
name which is used as the client id on the remote
broker.
.TP 
\*(T<\fBkeepalive_interval\fR\*(T> \fIseconds\fR
Set the number of seconds after which the bridge
should send a ping if no other traffic has occurred.
Defaults to 60. A minimum value of 5 seconds
isallowed.
.TP 
\*(T<\fBpassword\fR\*(T> \fIvalue\fR
Configure a password for the bridge. This is used for
authentication purposes when connecting to a broker that
support MQTT v3.1 and requires a username and/or password
to connect. This option is only valid if a username is also
supplied.
.TP 
\*(T<\fBtopic\fR\*(T> \fIpattern\fR [ out | in | both ]
Define a topic pattern to be shared between the two
brokers. Any topics matching the pattern (which may include
wildcards) are shared. The second parameter defines the
direction that the messages will be shared in, so it is
possible to import messages from a remote broker using
"in", export messages to a remote broker using "out" or
share messages in both directions. If this parameter is not
defined, the default of "out" is used.

This option can be specified multiple times per
bridge.

Care must be taken to ensure that loops are not
created with this option. If you are experiencing high CPU
load from a broker, it is possible that you have a loop
where each broker is forever forwarding each other the same
messages.
.TP 
\*(T<\fBusername\fR\*(T> \fIname\fR
Configure a username for the bridge. This is used for
authentication purposes when connecting to a broker that
support MQTT v3.1 and requires a username and/or password
to connect. See also the password option.
.SH FILES
mosquitto.conf
.SH BUGS
\fBmosquitto\fR bug information can be found at http://launchpad.net/mosquitto.
.SH "SEE ALSO"
\fBmosquitto\fR(8)
\fBlimits.conf\fR(5)
.SH AUTHOR
Roger Light <\*(T<roger@atchoo.org\*(T>>
